#!/usr/bin/env python2

from __future__ import print_function
from __future__ import unicode_literals
from __future__ import division
from __future__ import absolute_import

from rflib import RfCat, keystop, ChipconUsbTimeoutException
import time
import datetime
import argparse
import openomni.rf
from openomni.packet import Packet
import sys


def main(options=None):

    parser = argparse.ArgumentParser(description="Capture omnipod packets using rfcat.")
    parser.add_argument("--json", action="store_true",
                        help="print as json (default: text line)")

    parser.add_argument("--raw", action="store_true",
                        help="print raw packet")

    args = parser.parse_args()

    d = RfCat(0, debug=False)
    openomni.rf.configure_rfcat(d)
    json = args.json

    while not keystop():
        try:
            pkt, ts = d.RFrecv(timeout=80000)
            pkt = Packet.flip_bytes(pkt)
            rcv_time = datetime.datetime.now()

            x = 0
            while x < len(pkt):
                data = pkt[:len(pkt) - (x + 1)]
                packet = Packet(data)
                packet.received_at = rcv_time
                if packet.is_valid():
                    #print(data.encode("hex"))
                    if args.raw:
                        print(packet.data.encode("hex"))
                    if json:
                        print(packet.as_json())
                    else:
                        print(packet)
                    break
                x += 1

        except ChipconUsbTimeoutException:
            time.sleep(0.5)

    sys.stdin.read(1)

if __name__ == "__main__":
    main()
